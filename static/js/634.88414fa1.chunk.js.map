{"version":3,"file":"static/js/634.88414fa1.chunk.js","mappings":"+KAiBA,UAbqB,SAAHA,GAAoD,IAAnCC,EAASD,EAApBE,UAASC,EAAAH,EAAaI,WAAAA,OAAU,IAAAD,EAAG,IAAGA,EACtDE,GAAeC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,KAAKH,YAAY,IAC3DI,GAAaH,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,KAAKC,UAAU,IAG7D,OAFwBJ,IAAiBI,GAEjBC,EAAAA,EAAAA,KAACC,EAAAA,GAAQ,CAACC,GAAIR,IAAiBH,CACzD,C","sources":["components/PrivateRoute.jsx"],"sourcesContent":["import { useSelector } from 'react-redux';\nimport { Navigate } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst PrivateRoute = ({ component: Component, redirectTo = '/' }) => {\n  const isRefreshing = useSelector(state => state.user.isRefreshing);\n  const isLoggedIn = useSelector(state => state.user.isLoggedIn);\n  const shouldRedirect = !isRefreshing && !isLoggedIn;\n\n  return shouldRedirect ? <Navigate to={redirectTo} /> : Component;\n};\n\nPrivateRoute.propTypes = {\n  Component: PropTypes.object,\n  redirectTo: PropTypes.string,\n};\n\nexport default PrivateRoute;\n"],"names":["_ref","Component","component","_ref$redirectTo","redirectTo","isRefreshing","useSelector","state","user","isLoggedIn","_jsx","Navigate","to"],"sourceRoot":""}
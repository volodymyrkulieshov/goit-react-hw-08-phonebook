{"version":3,"file":"static/js/59.00f61c99.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["export const selectAllContacts = state => state.contacts;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilter = state => state.filter;\n\nexport const selectFilteredContacts = state => {\n  const { contacts } = selectAllContacts(state);\n  const filter = selectFilter(state);\n  if (!filter) {\n    return contacts;\n  } else {\n    const normalizedFilter = filter.toLowerCase();\n    const filteredContacts = contacts.filter(\n      ({ name, number }) =>\n        name.toLowerCase().trim().includes(normalizedFilter) ||\n        number.trim().includes(normalizedFilter)\n    );\n\n    if (normalizedFilter && !filteredContacts.length) {\n      alert('No contacts matching your request');\n    }\n    return filteredContacts;\n  }\n};\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { nanoid } from '@reduxjs/toolkit';\nimport { addContactThunk } from '../../redux/contacts/contactsThunks';\nimport { selectAllContacts } from '../../redux/contacts/selectors';\nimport { Button, TextField } from '@mui/material';\n\nconst ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const { contacts } = useSelector(selectAllContacts);\n  const dispatch = useDispatch();\n\n  // console.log('contacts', contacts)\n  const handleChange = e => {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const normalizedName = name.toLowerCase();\n\n    const isAdded = contacts.find(\n      el => el.name.toLowerCase() === normalizedName\n    );\n\n    if (isAdded) {\n      alert(`${name}: is already in contacts`);\n      setName('');\n      setNumber('');\n      return;\n    }\n    dispatch(addContactThunk({ id: nanoid(), name, number }));\n    alert(`Contact ${name} has been added to your Contacts`);\n    resetForm();\n  };\n\n  const resetForm = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        {/* <label className={css.label} htmlFor=\"example\">\n          Name\n        </label> */}\n        <TextField\n          style={{ marginBottom: 20 }}\n          onChange={handleChange}\n          id=\"outlined-basic\"\n          name=\"name\"\n          type=\"text\"\n          value={name}\n          label=\"Name\"\n          fullWidth\n          required\n        />\n        {/* <label className={css.label} htmlFor=\"example\">\n          Number\n        </label> */}\n        <TextField\n          style={{ marginBottom: 20 }}\n          onChange={handleChange}\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          label=\"Number\"\n          fullWidth\n          required\n        />\n        <Button\n          style={{ textTransform: 'none', margin: 'auto', display: 'block' }}\n          variant=\"contained\"\n          type=\"submit\"\n        >\n          Add contact\n        </Button>\n      </form>\n    </>\n  );\n};\n\nexport default ContactForm;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { deleteContactThunk } from '../../redux/contacts/contactsThunks';\nimport { selectFilteredContacts } from '../../redux/contacts/selectors';\nimport { Box, Button, List, ListItem, Typography } from '@mui/material';\n\nconst ContactList = () => {\n  const contacts = useSelector(selectFilteredContacts);\n  // console.log('contacts', contacts);\n  const dispatch = useDispatch();\n\n  const onDeleteContact = (id, name) => {\n    dispatch(deleteContactThunk(id));\n    return alert(`Contact ${name} has been deleted from your Contacts`);\n  };\n  return (\n    <>\n      <List style={{ width: '100%', backgroundColor: '#fff' }}>\n        {contacts.map(({ name, number, id }) => {\n          return (\n            <ListItem\n              style={{ display: 'flex', alignItems: 'center' }}\n              key={id}\n            >\n              <Typography\n                style={{ marginRight: 25 }}\n                typography=\"h6\"\n                color=\"#1954d2\"\n                component=\"span\"\n              >\n                {name}:\n              </Typography>\n              <Box style={{ marginLeft: 'auto' }}>\n                <Typography\n                  style={{ marginRight: 25 }}\n                  typography=\"h6\"\n                  color=\"#1954d2\"\n                  component=\"span\"\n                >\n                  {number}\n                </Typography>\n                <Button\n                  variant=\"contained\"\n                  style={{ backgroundColor: 'darkBlue' }}\n                  type=\"button\"\n                  onClick={() => onDeleteContact(id, name)}\n                >\n                  Delete\n                </Button>\n              </Box>\n            </ListItem>\n          );\n        })}\n      </List>\n    </>\n  );\n};\nexport default ContactList;\n","// extracted by mini-css-extract-plugin\nexport default {\"filterForm\":\"Filter_filterForm__+l+6Q\",\"filterLabel\":\"Filter_filterLabel__+pnW-\",\"filterInput\":\"Filter_filterInput__1Cysk\"};","import React from 'react';\nimport { nanoid } from '@reduxjs/toolkit';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectFilter } from '../../redux/contacts/selectors';\nimport { changeFilter } from '../../redux/contacts/filterSlice';\nimport css from './Filter.module.css';\n\nconst filterInputId = nanoid();\n\nconst Filter = () => {\n  const filterValue = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  const setFilter = event => {\n    const normalizedValue = event.target.value.toLowerCase();\n\n    dispatch(changeFilter(normalizedValue));\n  };\n\n  return (\n    <form className={css.filterForm}>\n      <label className={css.filterLabel}>\n        Find contacts by name\n        <input\n          className={css.filterInput}\n          id={filterInputId}\n          type=\"text\"\n          value={filterValue}\n          onChange={setFilter}\n          placeholder=\"Search\"\n        />\n      </label>\n    </form>\n  );\n};\n\nexport default Filter;\n","import ContactForm from 'components/ContactForm/ContactForm';\nimport ContactList from 'components/ContactList/ContactList';\nimport Filter from 'components/Filter/Filter';\n\nconst ContactsPage = () => {\n  return (\n    <>\n      <ContactForm />\n      <Filter />\n      <ContactList />\n    </>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["selectAllContacts","state","contacts","selectFilter","filter","selectFilteredContacts","normalizedFilter","toLowerCase","filteredContacts","_ref","name","number","trim","includes","length","alert","_useState","useState","_useState2","_slicedToArray","setName","_useState3","_useState4","setNumber","useSelector","dispatch","useDispatch","handleChange","e","_e$target","target","value","resetForm","_jsx","_Fragment","children","_jsxs","onSubmit","preventDefault","normalizedName","find","el","concat","addContactThunk","id","nanoid","TextField","style","marginBottom","onChange","type","label","fullWidth","required","Button","textTransform","margin","display","variant","List","width","backgroundColor","map","ListItem","alignItems","Typography","marginRight","typography","color","component","Box","marginLeft","onClick","deleteContactThunk","onDeleteContact","filterInputId","filterValue","className","css","event","normalizedValue","changeFilter","placeholder","ContactForm","Filter","ContactList"],"sourceRoot":""}